
public class NodeList
{
	
	public Node top;
	public Node bottom;
	
	public NodeList()
	{
				
	}
	
	
	public void addNode(Node newNode)
	{
		if(isEmpty())
		{
			this.bottom = newNode;
			this.top = newNode;			
		}
		else
		{
			//add one to the top
			top.setAbove(newNode); 
			top.getAbove().setBelow(top);				
			this.top = newNode;			
			
		}
		
		
	}
	
	
	public void removeNode(Node oldNode)
	{
		
		if (!isEmpty())
		{
					
			if (oldNode.getBelow() != null)
			{
			oldNode.getBelow().setAbove(oldNode.getAbove());
			} else
				{
					oldNode.getAbove().setBelow(null);
				}
			
			if(oldNode.getAbove() != null)
			{
			oldNode.getAbove().setBelow(oldNode.getBelow());
			}
			else
			{
				oldNode.getBelow().setAbove(null);
			}
		
			System.out.println(oldNode.getName() + " has been removed");
			oldNode = null;
		}
		else
		{
			System.out.println ("No nodes to remove");
			
		}
		
		
	}
	
	
	public void printNodeList()
	{
		Node temp = new Node();
		temp = this.bottom;
		int count = 0;
		while(temp != null)
		{
			System.out.println("Node at position " + count + " is: " + temp.getName());
			temp = temp.getAbove();
			count = count + 1;
		}
		
		
	}
	
	
	
	public boolean isEmpty()
	{
		if (this.bottom == null)
		{
			return true;
		} 
		return false;
		
	}
	
}
